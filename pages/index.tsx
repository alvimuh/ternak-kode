import {
  Box,
  Heading,
  Container,
  Wrap,
  WrapItem,
  CircularProgress,
} from "@chakra-ui/react";
import type { NextPage } from "next";

import { Key, useEffect, useState } from "react";
import PageContainer from "../components/PageContainer";
import { Icon } from "ts-react-feather-icons";
import Head from "next/head";
import axios from "axios";
import { ResourceType } from "../utils/types";
const type = [
  {
    name: "youtube",
    icon: "youtube",
    color: "red",
  },
  {
    name: "website",
    icon: "globe",
    color: "blue",
  },
];

const Home: NextPage = () => {
  const [resource, setResource] = useState({
    data: [] as any,
    loading: true,
    error: false,
  });
  useEffect(() => {
    getData();
  }, []);

  const getData = async () => {
    try {
      const res = await axios.get("/api/resources");
      setResource({
        data: res.data,
        loading: false,
        error: false,
      });
    } catch (error) {
      // console.log(error);
      setResource((prevState) => ({
        ...prevState,
        loading: false,
        error: true,
      }));
    }
  };
  return (
    <>
      <Head>
        <title>Ternak Kode - Belajar ngoding terus, biar jago ngode</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.png" />
      </Head>
      <PageContainer>
        <Container>
          <Heading size="xl" my="10" textAlign="center">
            Resources belajar coding
          </Heading>
          {resource.loading ? (
            <Box display="flex" alignItems="center">
              <CircularProgress
                marginX="auto"
                isIndeterminate
                color="blue.300"
              />
            </Box>
          ) : (
            resource.data.map((item: ResourceType, index: Key) => {
              const iconName: any = type.find(
                (element) => element.name === item.type
              )?.icon;
              return (
                <Box
                  key={index}
                  boxShadow="md"
                  py="6"
                  px="4"
                  bg="whiteAlpha.200"
                  borderWidth={1}
                  borderColor="whiteAlpha.300"
                  mb="4"
                  borderRadius="4"
                  as="a"
                  target="_blank"
                  rel="noreferrer"
                  href={item.link}
                  display="flex"
                  _hover={{
                    bg: "whiteAlpha.300",
                  }}
                >
                  <Box width="16">
                    <Box
                      mr="4"
                      bg={`${
                        type.find((element) => element.name === item.type)
                          ?.color
                      }.500`}
                      color="white"
                      height="10"
                      width="10"
                      display="flex"
                      alignItems="center"
                      borderRadius="full"
                    >
                      <Box mx="auto">
                        <Icon name={iconName} />
                      </Box>
                    </Box>
                  </Box>
                  <Box flex="1">
                    <Heading size="md" marginBottom="4">
                      {item.title}
                    </Heading>
                    <Wrap spacing="2">
                      {item.tags.map((tag, index) => (
                        <WrapItem
                          key={index}
                          bg="whiteAlpha.400"
                          px="3"
                          py="0"
                          borderRadius="full"
                          fontSize="sm"
                          fontWeight={600}
                          lineHeight="1.5"
                          pb="0.4"
                        >
                          {tag}
                        </WrapItem>
                      ))}
                    </Wrap>
                  </Box>
                </Box>
              );
            })
          )}
        </Container>
      </PageContainer>
    </>
  );
};

export default Home;
